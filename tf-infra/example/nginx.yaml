---
apiVersion: v1
kind: Namespace
metadata:
  name: nginx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: nginx
  name: deployment-nginx
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: app-nginx
  replicas: 5
  template:
    metadata:
      labels:
        app.kubernetes.io/name: app-nginx
    spec:
      containers:
      - image: 379445081719.dkr.ecr.us-east-1.amazonaws.com/nginx-globo-api:latest
        imagePullPolicy: Always
        name: app-nginx
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  namespace: nginx
  name: service-nginx
spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  type: NodePort
  selector:
    app.kubernetes.io/name: app-nginx
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: nginx
  name: ingress-nginx
  annotations:
    alb.ingress.kubernetes.io/tags: Name=hml-nginx
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/certificate-arn: "arn:aws:acm:us-east-1:379445081719:certificate/1c170a60-76da-4e23-ad36-e50c71b21116,arn:aws:acm:us-east-1:379445081719:certificate/ab58055e-530b-47d9-9f5c-7252f3ce4729"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: service-nginx
              port:
                number: 80